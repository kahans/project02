<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<!-- css,js 기타등등을 매핑하기 위해 써야 한다. -->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 특정 폴더에서 jsp확장자만 빼서 불러온다. -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:component-scan base-package="com.team.li" />
	<!-- DB에서 연결을 한다. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/library?useUnicode=true&amp;characterEncoding=UTF8"/>
        <property name="username" value="root"/>
        <property name="password" value="java0000"/>
        <!-- <property name="url" value="jdbc:mysql://localhost:3306/myeong3695?useUnicode=true&amp;characterEncoding=utf-8" />
        <property name="username" value="myeong3695" />
        <property name="password" value="java5963" /> -->
    </bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybatis 세션생성시 사용할 dataSource주입 -->
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/team/li/library/service/LibraryMapper.xml</value>
				<value>classpath:com/team/li/book/service/bookMapper.xml</value>
			</list>
		</property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/library/*" /><!-- @RequestMapping(value = "/login") 
				주소들을 가로채간다. -->
			<mvc:exclude-mapping path="/library/login" />
			<mvc:exclude-mapping path="/library/libraryAdd"/><!-- 특정 주소만 통과(무시)한다. -->
			<!-- 여러개 컨트롤러 추가 가능 -->
			<!-- <mvc:mapping path="/admin_write"/> <mvc:mapping path="/admin_update"/> 
				<mvc:mapping path="/admin_delete"/> -->
			<!-- 로그인체크 인터셉터 클래스 -->
			<bean class="com.team.li.library.controller.LoginCheck" />
		</mvc:interceptor>
	</mvc:interceptors>


	
</beans>
